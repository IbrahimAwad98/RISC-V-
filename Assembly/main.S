.section .text
// 
// GPIB Test code                                                       0.1 AC
//
.equ GPIOB,  0x40010C00         // GPIOB Base address.
.equ CTR0,   0x00               // Port control register offset
.equ BOP,    0x10               // Port bit operations register offset
.equ BC,     0x14               // Port bit clear register offset

ledi:   li t0, GPIOB            // t0 points to GPIOB...
        lw t1, CTR0(t0)         // ...retreive current configuration...
        li t2,0xFFFFFFF0        // ...prepare to erase old P0 config...
        and t1, t1, t2          // ...erase...
        li t2,0x00000003        // ...prepare to set new P0/out config...
        or t1, t1, t2           // ...set...
        sw t1, CTR0(t0)         // ...store updated cofiguration...
        ret                     // and go home!

lon:    li t0, GPIOB            // t0 points to GPIOB...
        li t1, 0x1              // ...prepare to turn PB0 on...
        sw t1, BOP(t0)          // ...execute request...
        ret                     // and go home!

loff:   li t0, GPIOB            // t0 points to GPIOB...
        li t1, 0x1              // ...prepare to turn PB0 off...
        sw t1, BC(t0)          // ...execute request...
        ret                     // and go home!

// 
// GPIA Test code                                                       0.1 AC
//
.equ GPIOA,  0x40010800         // GPIOA Base address.
.equ ISTAT,  0x08               // Port Input Status register offset.

keyi:   li t0, GPIOA            // t0 points to GPIOB...
        lw t1, CTR0(t0)         // ...retreive current configuration...
        li t2,0xFF0FFFFF        // ...prepare to erase old P5 config...
        and t1, t1, t2          // ...erase...
        li t2,0x00400000        // ...prepare to set new P5/in config...
        or t1, t1, t2           // ...set...
        sw t1, CTR0(t0)         // ...store updated cofiguration...
        ret                     // and go home!

keyq:   li t0, GPIOA            // t0 points to GPIOB...
        lw a0, ISTAT(t0)        // ...read input status register...
        andi a0, a0, 0x020      // ...mask out bit 5...
        ret                     // and go home!


/////////////////////////////////////////////////////////////////////////////////////
// RCU Reset and Clock Unit Subroutine package                         0.91 AC
/////////////////////////////////////////////////////////////////////////////////////
.equ RCU,    0x40021000
.equ APB2EN, 0x18
.equ PAEN,   0x4
.equ PBEN,   0x8

// RCU2EN Enabel APB2 bus devices //////////////////////////////////// 1.0 / AC ///
rcui:   li t0,RCU           // t0 points to RCU...
        lw t1,APB2EN(t0)    // ...retrieve current configuration...
        li t2,PBEN+PAEN     // ...prepare GPIOA..B "on" constant...
        or t1,t1,t2         // ...and update the configuration...
        sw t1,APB2EN(t0)    // ...then save back the updated config...
        ret                 // and go home!
        
// RCU Reset and Clock Unit Subroutine package ////////////////////////// END /////// 

.global main
main:   call rcui               // Turn on the GPIOB module...
        call ledi               // ...and config PB0 as output.
        call keyi               // ...and config PA5 as input.

       // call lon                // Turn PB0 on!

//1:      j 1b

loop:   call keyq               // Get key status..
        bne a0, zero, set       // ...is it on?
        call loff               // ......No! Turn PB0 off
        j loop                  //           & continue!
set:    call lon                // ......Yes! Turn PB0 on
        j loop                  //            & continue!

1:      j 1b                    // (Halt)

.end
